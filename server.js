const express = require('express');
const bodyParser = require('body-parser');
const crypto = require('crypto');
const path = require('path');
const axios = require('axios'); // <--- –æ–±–æ–≤'—è–∑–∫–æ–≤–æ —Ç—É—Ç!

const app = express();
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, 'public')));

// Telegram
const BOT_TOKEN = '7987722166:AAEscpJFr4z5oOsVQi8d-_JF7vxg5kFVGB8';
const CHAT_ID = '1149871757';

// LiqPay
const PUBLIC_KEY = 'sandbox_i10822128511';
const PRIVATE_KEY = 'sandbox_qECwRS3ZH91wXEXVBHilk2w5UicL8CpJxXARlBDt';

function base64(data) {
  return Buffer.from(data).toString('base64');
}

function sha1(string) {
  return crypto.createHash('sha1').update(string).digest('base64');
}

// üí≥ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É
app.post('/create-payment', (req, res) => {
  const { amount, country } = req.body;

  const paymentData = {
    public_key: PUBLIC_KEY,
    version: '3',
    action: 'pay',
    amount: amount.toString(),
    currency: country,
    description: '–¢–µ—Å—Ç–æ–≤–∞ –æ–ø–ª–∞—Ç–∞',
    order_id: 'order_' + Date.now(),
    result_url: 'https://yourdomain.com/thank-you'
  };

  const data = base64(JSON.stringify(paymentData));
  const signature = sha1(PRIVATE_KEY + data + PRIVATE_KEY);

  res.json({ data, signature });
});

// üì¶ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ Telegram
app.post('/send-order', async (req, res) => {
  const data = req.body;

  console.log('‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', data);

  const message = `
üì¶ –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:
üë§ –Ü–º'—è: ${data.firstName || '–Ω–µ–º–∞—î'}
üë§ –ü—Ä—ñ–∑–≤–∏—â–µ: ${data.lastName || '–Ω–µ–º–∞—î'}
üìß Email: ${data.email || '–Ω–µ–º–∞—î'}
üìç –û–±–ª–∞—Å—Ç—å: ${data.region || '–Ω–µ–º–∞—î'}
üèôÔ∏è –ú—ñ—Å—Ç–æ: ${data.city || '–Ω–µ–º–∞—î'}
üè§ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è: ${data.postOffice || '–Ω–µ–º–∞—î'}
üá®üáø –ß–µ—Ö—ñ—è: ${data.czBranch || '–Ω–µ –æ–±—Ä–∞–Ω–æ'}
üí≥ –û–ø–ª–∞—Ç–∞: ${data.paymentType || '–Ω–µ –≤–∏–±—Ä–∞–Ω–æ'}
`;

  try {
    const tgRes = await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: message
    });

    console.log('üì¨ Telegram —É—Å–ø—ñ—à–Ω–æ:', tgRes.data);
    res.status(200).send('OK');
  } catch (err) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram:', err.response?.data || err.message);
    res.status(500).send('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram');
  }
});

app.listen(3000, () => {
  console.log('Server running on port 3000');
  console.log('Open http://localhost:3000 in your browser');
});

app.post('/send-cart-summary', async (req, res) => {
  const { message } = req.body;

  try {
    await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: message
    });
    res.sendStatus(200);
  } catch (err) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:', err);
    res.sendStatus(500);
  }
});


